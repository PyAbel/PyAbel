name: Build wheels

on: [workflow_dispatch, workflow_call]

jobs:
  wheels:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [
          ubuntu-24.04, ubuntu-24.04-arm,
          macos-15-intel, macos-15,
          windows-2025, windows-11-arm
        ]

    steps:
    - uses: actions/checkout@v4
    - name: Set up Python
      uses: actions/setup-python@v5
      with:
        python-version: "3.13" # for cibuildwheel itself
    - name: Install cibuildwheel
      run: python -m pip install cibuildwheel==3.2.0
    - name: Build wheels
      env:
        # Linux also tries to build i686 (for which NumPy has no binary packages)
        CIBW_ARCHS: "native"
        # "manylinux" for Linux should be enough;
        # disable free-threading builds (Cython extension uses GIL)
        CIBW_SKIP: "*musllinux* cp3??t-*"
        # build only for Python versions with full support
        CIBW_PROJECT_REQUIRES_PYTHON: ">=3.13" # ends 2026-05
        # testing built packages requires pytest
        CIBW_TEST_REQUIRES: "pytest"
        # calling pytest directly uses wrong python;
        # results can be copied to output (with meaningful name) only manually
        CIBW_TEST_COMMAND: >
          python -m pytest --pyargs abel --log-level=WARN &&
          python {package}/.github/workflows/save-test.py {package} {wheel}
      run: python -m cibuildwheel --output-dir wheels
    - uses: actions/upload-artifact@v4
      with:
        name: wheels(${{ github.ref_name }})${{ matrix.os }}
        path: ./wheels/*
